---
name: CI/CD

on:
  - push

env:
  CONTAINER_REGISTRY_USERNAME: tailzip
  CONTAINER_COMMIT_IMAGE: ghcr.io/tailzip/github-actions-dojo:${{ github.sha }}
  CONTAINER_LATEST_IMAGE: ghcr.io/tailzip/github-actions-dojo:latest

jobs:
  # lint-all:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: github/super-linter@v3
  #       env:
  #         VALIDATE_ALL_CODEBASE: false
  #         DEFAULT_BRANCH: main
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # sast:
  #   name: Static Code Analysis Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'

  #     - run: |
  #         pip3 install -r requirements.txt
  #         bandit app.py
  #       name: Run static code analysis

  # tests:
  #   name: Unit Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'

  #     - run: |
  #         pip3 install -r requirements.txt
  #         python -m pytest --junit-xml=pytest-report.xml
  #       name: Run unit tests

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build and push Docker image
        run: |
          echo $PAT | docker login ghcr.io -u $CONTAINER_REGISTRY_USERNAME --password-stdin
          docker build --build-arg APP_VERSION="$APP_VERSION" -t $CONTAINER_COMMIT_IMAGE  -t $CONTAINER_LATEST_IMAGE .
          docker push $CONTAINER_COMMIT_IMAGE
          docker push $CONTAINER_LATEST_IMAGE
        env:
          PAT: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          APP_VERSION: ${{ github.sha }}

  integ-tests:
    runs-on: ubuntu-latest
    needs:
      - build
    services:
      my-app:
        image: ghcr.io/tailzip/github-actions-dojo:${{ github.sha }}
        credentials:
          username: ${{ env.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        ports:
          - 8000:8000
    steps:
      - uses: actions/checkout@v2

      - name: Setup BATS
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.2.1

      - run: ./github-actions-scripts/test_bats.sh
